@model MyNotes.Models.NotesModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    DateTime currentDate = DateTime.Now;
    string formattedDate = currentDate.ToString("dd-MM-yyyy HH:mm:ss");

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    <div class="row">
        <div class="col-1">
            <h4>Notes</h4>
        </div>
        <div class="col-3">
            <form asp-action="Search" id="searchForm">
                <input asp-for="SearchTerm" class="form-control" id="searchInput" />
                @* <div class="form-group">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div> *@
            </form>
        </div>
        <div />
        <hr />
        <div class="container mt-4">
            <div class="row">
                <div class="col-md-4">
                    <form asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label>@formattedDate</label><br />
                            <label asp-for="InputNote.Name" class="control-label"></label>
                            <input asp-for="InputNote.Name" name="Name" class="form-control" />
                            <span data-valmsg-for="Name" class="text-danger" data-valmsg-replace="true"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="InputNote.Description" class="control-label"></label>
                            <textarea asp-for="InputNote.Description" name="Description" class="form-control my-text-desription"></textarea>
                            <span data-valmsg-for="Description" class="text-danger" data-valmsg-replace="true"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="InputNote.links" class="control-label"></label>
                            <textarea asp-for="InputNote.links" name="links" class="form-control my-text-links"></textarea>
                            <span data-valmsg-for="links" class="text-danger" data-valmsg-replace="true"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="InputNote.Tags" class="control-label"></label>
                            <input asp-for="InputNote.Tags" name="Tags" class="form-control" />
                            <span data-valmsg-for="Tags" class="text-danger" data-valmsg-replace="true"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="InputNote.CreatedDate" class="control-label"></label><br />
                            <label>@formattedDate</label><br />

                            @* <input asp-for="InputNote.CreatedDate" name="CreatedDate" value="@currentDate" text="@currentDate" class="form-control" /> *@
                            @* <span asp-validation-for="InputNote.CreatedDate" class="text-danger"></span> *@
                            <span data-valmsg-for="CreatedDate" class="text-danger" data-valmsg-replace="true"></span>
                        </div>
                        @* <div class="form-group" hidden>
                            <label asp-for="InputNote.UpdatedDate" class="control-label"></label>
                            <input asp-for="InputNote.UpdatedDate" name="UpdatedDate" class="form-control" />
                            <span data-valmsg-for="UpdatedDate" class="text-danger" data-valmsg-replace="true"></span>
                        </div> *@
                        <div class="form-group">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
                <div class="col-md-7 my-col-res">
                    <h3>Results</h3>
                    <div id="searchResults">
                        <partial name="_SearchResults" model="Model.Notes" />

                    </div>
                </div>
            </div>
        </div>

        @section Scripts {
            @{
                await Html.RenderPartialAsync("_ValidationScriptsPartial");
            }

            <script>
                document.getElementById('searchInput').addEventListener('input', function () {
                    const form = document.getElementById('searchForm');
                    const formData = new FormData(form);

                    fetch(form.action, {
                        method: 'POST',
                        body: formData,
                    })
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById('searchResults').innerHTML = html;
                    })
                    .catch(error => {
                        console.error('Error during AJAX search:', error);
                    });
                });
            </script>

            <script>
                window.onload = function () {
                    // const urlParams = new URLSearchParams(window.location.search);
                    // if (urlParams.get('focus') === 'true') {
                        document.getElementById('searchInput').focus();
                    //}
                };
            </script>

            @* <script>

                document.getElementById('searchInput').addEventListener('change', function () {
                    document.getElementById('searchForm').submit();
                });
            </script> *@

            <script>
                document.getElementById('InputNote_Name').addEventListener('input', function () {
                    const topic = this.value.trim().toLowerCase();
                    let tags = '';

                    if (topic.includes('asp.net')) {
                        tags = 'asp.net, razor, mvc';
                    } else if (topic.includes('react')) {
                        tags = 'react, javascript, frontend';
                    } else if (topic.includes('django')) {
                        tags = 'django, python, backend';
                    } else {
                        tags = topic.split(' ').join(', ');
                    }

                    document.getElementById('InputNote_Tags').value = tags;
                });
            </script>
        }
</body>
</html>
